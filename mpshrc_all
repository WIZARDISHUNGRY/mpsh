# mpshrc_all 
#
# runs for any instance of mpsh


# job handlers:
setenv handler-t="!at"
setenv handler-q="!batch-submit"
setenv handler-w="!xterm -e (cat) &"

# These use `cat` because the remote shell is sh or bash.
setenv handler-a="!rsh a31 cd (pwd) ';' `cat`"
setenv handler-p="!rsh pi0 cd (pwd) ';' `cat`"


# Here is a "misuse" of the handler feature. The "command text"
# doesn't actually have to be a command...
# Evaluate the "command" as a dc calculation:
setenv handler-d="!dc"
# Send the "command" to the X Windows buffer:
setenv handler-b="!rsh desktop xcb -s 0 -display $DISPLAY"

# alias env variables:
# (second versions includes substitutions)
# This gives behaviour similar to bash's "!$" with "$!".
# Which is confusing, admittedly.
#setenv !="!history | tail -1 | sed 's/.* //'"
setenv !="!echo (history | tail -1 | sed 's/.* //')"

# $x reads the X Windows buffer.
setenv x="!rsh desktop xcb -p 0 -display $DISPLAY"

setenv YY="!date +%Y-%m-%d"
setenv CWD="!pwd"
setenv HOST="!hostname"


# Internal mpsh settings:
# Show history & cd history substitutions
setenv mpsh-history=1
setenv mpsh-cdhistory=1
# Max error reporting
setenv mpsh-error-level=3

# Adjust history display formats as desired:
setenv mpsh-hist-disp=nc
setenv mpsh-hist-disp-l=ndxuec

# prompt
setenv mpsh-prompt="!echo (date '+%l:%M') $HOST 'mpsh% '"



